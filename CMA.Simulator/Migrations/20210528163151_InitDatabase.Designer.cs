// <auto-generated />
using System;
using CMA_Simulator.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CMA_Simulator.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20210528163151_InitDatabase")]
    partial class InitDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasPostgresExtension("pgcrypto")
                .HasPostgresExtension("uuid-ossp")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("CMA_Simulator.Model.CargoEquipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AssignedContainerNumber")
                        .HasColumnType("text");

                    b.Property<string>("Commodity")
                        .HasColumnType("text");

                    b.Property<string>("EquipmentSizeType")
                        .HasColumnType("text");

                    b.Property<string>("Grade")
                        .HasColumnType("text");

                    b.Property<string>("ShipmentId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ShipmentId");

                    b.ToTable("CargoEquipments");
                });

            modelBuilder.Entity("CMA_Simulator.Model.Container", b =>
                {
                    b.Property<string>("ContainerNumber")
                        .HasColumnType("text");

                    b.Property<string>("BuildYearAndCountry")
                        .HasColumnType("text");

                    b.Property<bool?>("CreditTermsRule")
                        .HasColumnType("boolean");

                    b.Property<string>("EquipmentSizeType")
                        .HasColumnType("text");

                    b.Property<DateTime>("LasEventDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastEvent")
                        .HasColumnType("text");

                    b.Property<string>("LeaseType")
                        .HasColumnType("text");

                    b.HasKey("ContainerNumber");

                    b.ToTable("Containers");
                });

            modelBuilder.Entity("CMA_Simulator.Model.Shipment", b =>
                {
                    b.Property<string>("ShipmentId")
                        .HasColumnType("text");

                    b.Property<string>("CargoShipmetId")
                        .HasColumnType("text");

                    b.Property<DateTime>("ClosingDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ContainerHandlingReference")
                        .HasColumnType("text");

                    b.Property<string>("Destination")
                        .HasColumnType("text");

                    b.Property<string>("PolWaypoint")
                        .HasColumnType("text");

                    b.Property<DateTime>("SalingDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("ShipperOwnedBooking")
                        .HasColumnType("boolean");

                    b.Property<string>("Voyage")
                        .HasColumnType("text");

                    b.HasKey("ShipmentId");

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("CMA_Simulator.Model.CargoEquipment", b =>
                {
                    b.HasOne("CMA_Simulator.Model.Shipment", "Shipment")
                        .WithMany("CargoEquipments")
                        .HasForeignKey("ShipmentId");

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("CMA_Simulator.Model.Shipment", b =>
                {
                    b.Navigation("CargoEquipments");
                });
#pragma warning restore 612, 618
        }
    }
}
